---
import { programs } from '../data/content.json';
import { Image } from 'astro:assets';
import program1 from '../assets/program1.jpg';
import program2 from '../assets/program2.jpg';
import program3 from '../assets/program3.jpg';

const programImages = [program1, program2, program3];

// Función para formatear los horarios de los programas
// Hecho con ayuda de ChatGPT, quizás puede ralentizar el renderizado
// Así que se está utilizando un archivo JSON con los horarios ya formateados en scheduleText
// Se puede ver el archivo en src/data/content.json
// Para usar esto cambiar programs por formattedPrograms en el map de abajo en container-info
/* function formatSchedule(schedule) {
    const groupedSchedule = {};
    // Group days by their time ranges
    for (const [day, times] of Object.entries(schedule)) {
        const timeRange = times.map(time => `${time.start} a ${time.end}`).join(", ");
        if (!groupedSchedule[timeRange]) {
            groupedSchedule[timeRange] = [];
        }
        groupedSchedule[timeRange].push(day);
    }

    // Format the grouped schedule into a readable string
    return Object.entries(groupedSchedule).map(([timeRange, days]) => {
        const daysString = days.join(", ");
        return `${daysString} de ${timeRange}`;
    }).join(", ");
}

const formattedPrograms = programs.map(program => ({
    ...program,
    formattedSchedule: formatSchedule(program.schedule)
}));
    */


---

<article class="container" id="programas">
    <h1>Programas</h1>
    <div class="container-info">
        {programs.map((program, key) => (
            <div data-aos={key % 2 === 0 ? "fade-left" : "fade-right"} data-aos-delay="200" data-aos-easing="ease-in-out" class={`program${key + 1}`}>
                <div class="info">
                    <h1>{program.name}</h1>
                    <h2>Horarios: {program.scheduleText}</h2>
                    <p>{program.description}</p>
                </div>
                <div class="img">
                    <Image src={programImages[key]} alt={program.name} loading="lazy" width="350" height="350" />
                </div>
            </div>
        ))}
    </div>
</article>

<style>
    .container {
        display: flex;
        position: relative;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 2rem;
        justify-self: center;
        width: 100%;
    }

    .container-info {
        display: flex;
        flex-direction: column;
        gap: 3rem;
    }

    .program1, .program2, .program3 {
        display: flex;
        flex-direction: row;
        gap: 4rem;
        justify-content: space-evenly;
    }

    .program2 {
        flex-direction: row-reverse;
    }


    .info {
        display: flex;
        flex-direction: column;
        width: 300px; 
    }

    img {
        width: 350px;
        height: 350px;
        object-fit: cover; 
        margin: -10px;
        transition: transform 0.2s ease-in-out;
        transform-origin: center center;
    }

    .img {
        background-color: black;
        width: 350px;
        height: 350px;
        
    }

    img:hover {
        transform: scale(0.97);
    }

    html.dark .img{
        background-color: red;
    }




    h1 {
        font-size: 2rem;
        color: black;
        

    }

    html.dark h1{
        color: white;
        text-shadow: 3px 3px  red;
    }

    h2 {
        font-size: 1.5rem;
    }

    p {
        font-size: 1.2rem;
        font-weight: 300;
        opacity: 0.9;
    }



    @media (max-width: 768px) {

 

        h1 {
            font-size: 1.5rem;
        }

        h2 {
            font-size: 1rem;
        }

        p {
            font-size: 1rem;
        }
        

        img {
            width: 270px;
            height: 270px;
        }

        .img {
            width: 270px;
            height: 270px;
        }


        img:hover {
        transform: none;
        }

        .info {
            max-width: 260px;
        }

        .container-info {
            padding: 1rem;
            flex-direction: column;
            align-items: center;    
        }
        .program1, .program3, .program2 {
            flex-direction: column;
            align-items: center;    
            justify-content: center;
        }

    }

</style>
